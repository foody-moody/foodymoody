plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'jacoco'
}

group = 'com.foodymoody'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    asciidoctorExt

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // querydsl
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // MySQL
    implementation 'com.mysql:mysql-connector-j'

    // REST Assured
    testImplementation 'io.rest-assured:rest-assured:4.5.1'

    // Rest Docs
    implementation 'org.springframework.restdocs:spring-restdocs-restassured:2.0.4.RELEASE'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'

    // Test Containers
    testImplementation 'org.testcontainers:testcontainers:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
    testImplementation 'org.testcontainers:mysql:1.18.3'

    // JaCoCo
    testImplementation 'org.jacoco:org.jacoco.agent:0.8.9'

    //Jwt
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // AWS
    implementation 'software.amazon.awssdk:s3:2.20.162'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacoco {
    toolVersion = '0.8.9'
}

asciidoctor {
    inputs.dir snippetsDir
    outputDir file("src/main/resources/static/docs")
    configurations 'asciidoctorExt'
    dependsOn test
}

jar {
    enabled = false
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated/annotationProcessor/java/main"]
        }
    }
}

